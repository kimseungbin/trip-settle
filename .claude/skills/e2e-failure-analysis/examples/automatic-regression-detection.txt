Example: Automatic Regression Detection

=== E2E TEST FAILURE ANALYSIS ===

## ⚠️  REGRESSION ALERT

**Status**: 🔴 NEW FAILURES DETECTED
**Regressions**: 2 tests that were passing now fail
**Likely Culprit**: Commit abc123de - "feat(frontend): Add delete button" (1h ago)
**Previous Run**: xyz789fg (3h ago) - Had 2 failures
**Current Run**: abc123de (1h ago) - Has 4 failures
**Change**: +2 failures (+100%) 📈 DEGRADED

---

### 🆕 New Failures (✅→❌)

These tests were **PASSING** in the previous run, now **FAILING**:

---

#### 1. ExpenseTracker › should delete expense [chromium]

**Status Change**: ✅ PASSING → ❌ FAILING

**Historical Status**:
```
Last 10 runs: ✅ ✅ ✅ ✅ ✅ ✅ ✅ ✅ ✅ ✅
Current:      ❌ ← REGRESSION!
```

**Test Stability**: STABLE (100% pass rate last 10 runs)
**Regression Severity**: 🔴 HIGH (broke previously stable test)

**Current Failure**:
- **Error Type**: Timeout
- **Error Message**: `Timeout 5000ms exceeded waiting for getByRole('button', { name: 'Delete' })`
- **Duration**: 5000ms (timed out)
- **Browser**: chromium

**Artifacts**:
- 📸 Screenshot: test-results/expense-delete-chromium/test-failed-1.png
- 🎥 Video: test-results/expense-delete-chromium/video.webm
- 🔍 Trace: test-results/expense-delete-chromium/trace.zip

**Root Cause Analysis**:
- **Commit**: abc123de
- **Message**: "feat(frontend): Add delete button"
- **Author**: John Doe <john@example.com>
- **When**: 1 hour ago

**What Changed**:
```bash
# The commit that added delete button BROKE the delete test!
git show abc123de -- packages/frontend/src/components/ExpenseList.svelte
```

**Hypothesis**:
The delete button feature changed button selectors or DOM structure,
making the test unable to find the button.

**Immediate Actions**:
1. 🔴 **CRITICAL**: Review commit abc123de (likely culprit)
2. 🔴 **URGENT**: Check if button selector changed (name: "Delete")
3. 🟡 **VERIFY**: Run test locally to reproduce
4. 🟡 **DECIDE**: Revert commit OR fix test selector

**Quick Fix Commands**:
```bash
# Option 1: Revert the problematic commit
git revert abc123de

# Option 2: Investigate what changed
git show abc123de
git diff xyz789fg abc123de -- packages/frontend/src/components/ExpenseList.svelte

# Option 3: Run test locally to debug
npm run test:e2e:docker -- expense-workflow
npx playwright test expense-workflow --project=chromium --debug
```

---

#### 2. CurrencySelector › should switch currencies [webkit]

**Status Change**: ✅ PASSING → ❌ FAILING

**Historical Status**:
```
Last 10 runs: ✅ ✅ ✅ ✅ ✅ ✅ ✅ ✅ ✅ ✅
Current:      ❌ ← REGRESSION!
```

**Test Stability**: STABLE (100% pass rate last 10 runs)
**Regression Severity**: 🔴 HIGH (broke previously stable test)

**Current Failure**:
- **Error Type**: Assertion
- **Error Message**: `Expected USD, received EUR`
- **Duration**: 1250ms
- **Browser**: webkit

**Artifacts**:
- 📸 Screenshot: test-results/currency-switch-webkit/test-failed-1.png
- 🎥 Video: test-results/currency-switch-webkit/video.webm

**Root Cause Analysis**:
- **Commit**: abc123de (same as failure #1)
- **Likely Issue**: State management regression
- Currency state not updating correctly

**What Changed**:
```bash
# Check for currency-related changes
git diff xyz789fg abc123de -- packages/frontend/src/components/CurrencySelector.svelte
git diff xyz789fg abc123de -- packages/frontend/src/lib/stores/
```

**Hypothesis**:
Currency state initialization or update logic broken by recent changes.
Possibly related to delete button feature (shared state?).

**Immediate Actions**:
1. 🔴 **CRITICAL**: Check CurrencySelector component changes in abc123de
2. 🔴 **URGENT**: Debug currency state management
3. 🟡 **VERIFY**: Add console.log to trace state updates
4. 🟡 **FIX**: Correct state management issue

**Quick Fix Commands**:
```bash
# Debug state management
git show abc123de -- packages/frontend/src/components/CurrencySelector.svelte

# Check for prop/state changes
git log --oneline -5 -S "selectedCurrency" -- packages/frontend/src/
```

---

### 📊 Regression Summary

**Total Regressions**: 2 tests
**Affected Browsers**: chromium (1), webkit (1)
**Common Factor**: Both broke in commit abc123de
**Likely Root Cause**: Single commit introduced 2 regressions

**Severity Assessment**: 🔴 **CRITICAL**
- 2 stable tests broke simultaneously
- 100% failure rate increase (2 → 4 failures)
- Blocking commit identified (abc123de)

**Recommendation**: **REVERT commit abc123de** OR fix both issues immediately before merging.

---

### 🎯 Immediate Action Plan

**Priority 1 (Next 1 hour)**:
1. Review commit abc123de in detail
2. Understand why delete button broke 2 tests
3. Decide: Revert OR Fix

**Priority 2 (Next 4 hours)**:
1. If reverting: Create new branch, implement delete button correctly, ensure tests pass
2. If fixing: Update test selectors AND fix state management bug

**Priority 3 (Next 24 hours)**:
1. Add regression tests to prevent future breaks
2. Review test robustness (selectors too brittle?)
3. Consider test selector improvements (data-testid attributes)

---

### 📈 Trend Context

**Pass Rate Trend**:
```
5 runs ago:  95.2% (2 failures)
4 runs ago:  95.2% (2 failures)
3 runs ago:  95.2% (2 failures)
2 runs ago:  95.2% (2 failures)
1 run ago:   95.2% (2 failures) ← Previous (xyz789fg)
Current:     90.5% (4 failures) ← Current (abc123de) 🔴 DEGRADED
```

**Observation**: Sudden 4.7% drop in pass rate.
This is a **significant degradation** caused by a single commit.

---

### 💡 Insights

**What Went Wrong**:
- Delete button feature introduced regressions
- Tests not updated alongside feature
- Button selector changes broke existing tests

**How to Prevent**:
- Run E2E tests BEFORE committing features
- Update tests when changing UI structure
- Use stable selectors (data-testid instead of text-based)
- Require E2E tests to pass in pre-commit hook

**Learning Opportunity**:
- Feature additions can break existing tests
- Always run full test suite before push
- TDD helps catch regressions early

---

### ✅ Automatic Regression Detection Summary

**Detection Method**: Automatic comparison with previous run (HEAD~1)
**Detection Time**: Immediate (on every E2E failure analysis)
**Data Source**: Git notes (refs/notes/ci/e2e-failures)
**Comparison Strategy**: Set difference (current - previous)

**Benefits of Automatic Detection**:
- ✅ No manual comparison needed
- ✅ Regressions highlighted immediately
- ✅ Actionable insights (revert commands, fix suggestions)
- ✅ Historical context (test was stable before)
- ✅ Culprit commit identified automatically

---

## Individual Failure Details

[Rest of the E2E test failure analysis report continues...]

### Failed Tests (All 4)

1. ExpenseTracker › should delete expense [chromium] (REGRESSION - covered above)
2. CurrencySelector › should switch currencies [webkit] (REGRESSION - covered above)
3. ExpenseTracker › should add expense [chromium] (CHRONIC - failing for 3 days)
4. Visual: Currency dropdown [webkit] (CHRONIC - failing for 1 day)

[Detailed analysis of each failure continues...]

---

## Commands Reference

### Regression Investigation

```bash
# Compare current and previous runs
git notes --ref=ci/e2e-failures show HEAD > current.txt
git notes --ref=ci/e2e-failures show HEAD~1 > previous.txt
diff previous.txt current.txt

# Extract just the test names
git notes --ref=ci/e2e-failures show HEAD | grep "^test_name" | sort > current_tests.txt
git notes --ref=ci/e2e-failures show HEAD~1 | grep "^test_name" | sort > previous_tests.txt

# Find new failures (regressions)
comm -23 current_tests.txt previous_tests.txt

# View culprit commit
git show abc123de

# View files changed in culprit commit
git diff-tree --no-commit-id --name-status -r abc123de
```

### Quick Fixes

```bash
# Revert the problematic commit (safest)
git revert abc123de
git push

# OR investigate and fix issues
git show abc123de
npm run test:e2e:docker
# Fix issues, commit, push
```

---

## Detection Metadata

- **Analysis Run**: 2025-10-26 15:30:00 UTC
- **Current Commit**: abc123de
- **Previous Commit**: xyz789fg
- **Time Between Runs**: 2 hours
- **Detection Method**: Automatic (Feature 5)
- **Regressions Found**: 2
- **Chronic Failures**: 2
- **Total Failures**: 4
