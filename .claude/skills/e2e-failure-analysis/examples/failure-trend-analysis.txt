Example: Failure Trend Analysis

=== FAILURE TREND ANALYSIS ===

Analysis Period: Last 20 commits (2025-10-23 to 2025-10-26)
Currently Failing Tests: 2

## Trend Analysis Report 📈

---

### 1. ExpenseTracker › should add expense with Enter key [chromium]

**Current Status**: ❌ FAILING (most recent CI run)

**Timeline:**
- **First Failed**: 3 days ago
- **First Failure Commit**: stu901abc ("feat(frontend): Add edit button")
- **Failure Duration**: 3 days (15 commits since first failure)
- **Last Passed**: 3 days ago (commit vwx234ef "Working state")

**Failure Rate Metrics:**
- **Recent (last 5 runs)**: 80% failure rate (4 failed, 1 passed)
- **Historical (last 20 runs)**: 60% failure rate (12 failed, 8 passed)
- **Trend**: 🔴 DEGRADING (recent 80% > historical 60%)
- **Velocity Impact**: Blocking merges for 3 days

**Detailed Failure History:**
```
Commit    Status  Time Ago  Commit Message
--------  ------  --------  --------------
abc123de  ❌      1h ago    refactor(frontend): Simplify expense form
def456gh  ❌      3h ago    style(frontend): Update button styles
ghi789jk  ✅      5h ago    docs: Fix typo in README
jkl012mn  ❌      8h ago    feat(frontend): Add form validation
mno345pq  ❌      12h ago   build(monorepo): Update dependencies
pqr678st  ✅      1d ago    chore(frontend): Lint fixes
stu901ab  ❌      1d ago    feat(frontend): Add edit button ← FIRST FAILURE
vwx234ef  ✅      2d ago    feat(frontend): Working expense tracker
yza567cd  ✅      2d ago    feat(frontend): Complete feature
bcd890fg  ✅      3d ago    feat(frontend): Initial implementation
[... 10 more passing commits before this ...]
```

**Pattern Visualization:**
```
✅ ✅ ✅ ✅ ✅ ✅ ✅ ✅ ✅ ✅  (commits 11-20, older)
                    ↓
                STABLE PERIOD (20+ commits passing)
                    ↓
✅ ❌ ❌ ✅ ❌ ❌ ✅ ❌ ❌ ❌  (commits 1-10, recent)
    ↑
FIRST FAILURE (commit stu901ab)

Interpretation: Test was 100% stable, then broke at commit stu901ab,
and has been failing 80% of the time since (with occasional passes).
```

**Root Cause Investigation:**

1. **Blame Analysis:**
   ```bash
   # What changed in the first failing commit?
   git show stu901ab -- packages/frontend/src/components/ExpenseForm.svelte

   Output:
   + <button class="edit-button" onclick={handleEdit}>Edit</button>
   + <button type="submit" bind:this={submitButton}>Add</button>
   ```

   **Finding**: "Add edit button" feature added a new button, possibly affecting
   the button selector in the test.

2. **Test Code Context:**
   ```typescript
   // Test that's failing:
   await page.getByRole('button', { name: 'Add' }).click()

   // Issue: Now there are TWO buttons (Add + Edit)
   // Selector may be ambiguous or timing changed
   ```

3. **Error Pattern:**
   ```
   Consistent error (when failing):
   "Timeout 5000ms exceeded waiting for getByRole('button', { name: 'Add' })"

   Analysis:
   - Not a timeout increase needed (passes 20% of time)
   - Likely race condition introduced by new button
   - Edit button may appear first, affecting rendering timing
   ```

**Trend Classification:**
- **Type**: 🔴 DEGRADING REGRESSION
- **Severity**: HIGH (3 days, blocking merges)
- **Confidence**: Very High (clear first failure, consistent error)
- **Category**: Code change regression (not environment/flaky)

**Recommendations (Priority Order):**

1. **IMMEDIATE (fix today)**:
   - Review commit stu901ab for button changes
   - Check if Edit button affects test selector
   - Possible quick fix:
     ```typescript
     // Before (ambiguous):
     await page.getByRole('button', { name: 'Add' }).click()

     // After (specific):
     await page.getByRole('button', { name: 'Add' }).last().click()
     // OR
     await page.locator('button[type="submit"]').click()
     ```

2. **INVESTIGATE**:
   - Compare DOM before/after stu901ab commit
   - Check if button rendering order changed
   - Verify test expectations are still valid

3. **VERIFY**:
   - Temporarily revert stu901ab to confirm it's the culprit
   - If test passes after revert → confirms root cause
   - Then re-apply stu901ab with test fix

4. **PREVENT**:
   - Add test coverage for new edit button feature
   - Ensure test selectors are unambiguous
   - Consider adding data-testid attributes

**Expected Outcome After Fix:**
- Failure rate drops to 0% (consistent passing)
- Test stability restored
- Edit button feature works without breaking existing tests

---

### 2. CurrencySelector › Visual: Currency dropdown [webkit]

**Current Status**: ❌ FAILING (most recent CI run)

**Timeline:**
- **First Failed**: 1 day ago
- **First Failure Commit**: yza567cd ("style(frontend): Update font sizes")
- **Failure Duration**: 1 day (5 commits since first failure)
- **Last Passed**: 1 day ago (commit vwx234ef)

**Failure Rate Metrics:**
- **Recent (last 5 runs)**: 40% failure rate (2 failed, 3 passed)
- **Historical (last 10 runs)**: 20% failure rate (2 failed, 8 passed)
- **Trend**: 🟡 STABLE (recent 40% ≈ historical 20%, small sample size)
- **Velocity Impact**: Minimal (only 1 day old)

**Detailed Failure History:**
```
Commit    Status  Time Ago  Commit Message
--------  ------  --------  --------------
abc123de  ✅      1h ago    refactor(frontend): Simplify expense form
def456gh  ❌      3h ago    style(frontend): Adjust spacing ← Current failure
ghi789jk  ✅      5h ago    docs: Fix typo
jkl012mn  ❌      8h ago    chore: Update snapshots
mno345pq  ✅      12h ago   build(monorepo): Update dependencies
pqr678st  ✅      1d ago    chore(frontend): Lint fixes
stu901ab  ✅      1d ago    feat(frontend): Add edit button
vwx234ef  ✅      1d ago    feat(frontend): Working state
yza567cd  ❌      1d ago    style(frontend): Update font sizes ← FIRST FAILURE
bcd890fg  ✅      2d ago    feat(frontend): Initial implementation
```

**Pattern Visualization:**
```
✅ ✅ ✅ ✅ ✅ ✅ ✅ ✅  (commits 6-13, older - all passing)
                ↓
✅ ❌ ✅ ✅ ❌ ✅ ✅  (commits 1-7, recent)
    ↑
FIRST FAILURE (commit yza567cd)

Interpretation: Visual test started failing after font size change,
but only fails 40% of the time (possibly flaky).
```

**Root Cause Investigation:**

1. **Blame Analysis:**
   ```bash
   git show yza567cd -- packages/frontend/src/components/CurrencySelector.svelte

   Output:
   - font-size: 14px;
   + font-size: 16px;
   ```

   **Finding**: Font size increased, expected to affect visual snapshot.

2. **Error Pattern:**
   ```
   Varying errors (when failing):
   - "127 pixels differ from expected"
   - "143 pixels differ from expected"
   - "156 pixels differ from expected"

   Analysis:
   - Different pixel counts suggest rendering inconsistency
   - Likely environmental (font rendering differences)
   - Visual tests should only run in CI (Linux)
   ```

3. **Flakiness Check:**
   ```
   Pattern: ✅ ❌ ✅ ✅ ❌ ✅ ✅
   Flip rate: 2 status changes / 6 transitions = 33% (moderate flaky)

   Conclusion: This is BOTH a visual change AND flaky behavior.
   ```

**Trend Classification:**
- **Type**: 🟡 STABLE VISUAL CHANGE (possibly intentional)
- **Severity**: MEDIUM (new issue, 1 day old)
- **Confidence**: Medium (small sample, may be flaky)
- **Category**: Visual regression + environmental flakiness

**Recommendations (Priority Order):**

1. **CLARIFY INTENT**:
   - Was font size change intentional?
   - Check commit yza567cd message/PR for context
   - If intentional → update snapshots
   - If not → revert font size change

2. **UPDATE SNAPSHOTS (if change is intentional)**:
   ```bash
   # Add to commit message:
   git commit -m "style(frontend): Update font sizes [update-snapshots]"

   # Or trigger via PR comment:
   /update-snapshots
   ```

3. **INVESTIGATE FLAKINESS**:
   - Check if visual tests run only in CI (TEST_ENV=ci-docker)
   - Verify snapshots are Linux-based (*-linux.png, not *-darwin.png)
   - Review Playwright config for visual test filtering

4. **MONITOR**:
   - Wait 2-3 more days to see if pattern continues
   - If failure rate increases → investigate further
   - If rate stays low (< 30%) → may be acceptable variance

**Expected Outcome:**
- If intentional change: Update snapshots, test passes consistently
- If unintentional: Revert font change, test passes again
- If flaky: Investigate CI-only visual test execution

---

## Summary

**Overall Test Health**: 🟡 NEEDS ATTENTION

**Critical Issues**: 1 test
- ExpenseTracker (3 days, degrading, HIGH priority)

**Monitoring**: 1 test
- CurrencySelector (1 day, stable, MEDIUM priority)

**Recommendations:**
1. ⚠️ Fix ExpenseTracker failure TODAY (blocking for 3 days)
2. 📊 Monitor CurrencySelector (may be intentional visual change)
3. 📈 Re-run trend analysis after fixes to verify improvement

**Detection Metadata:**
- Analysis run: 2025-10-26 14:45:00 UTC
- Commits analyzed: 20
- Time range: 3 days
- Detection method: Git notes historical analysis
