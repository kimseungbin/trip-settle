name: Update Visual Snapshots

# This workflow updates visual regression test snapshots in the remote CI environment.
# Visual tests should NEVER be updated locally due to rendering inconsistencies.
#
# Trigger methods:
# 1. Manual: Go to Actions tab → "Update Visual Snapshots" → Run workflow
# 2. PR Comment: Comment "/update-snapshots" on a pull request
# 3. Commit Message: Include "[update-snapshots]" in commit message

on:
  # Manual trigger from GitHub UI
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to update snapshots on'
        required: false
        default: ''

  # Trigger via PR comment
  issue_comment:
    types: [created]

  # Trigger via commit message containing [update-snapshots]
  push:
    branches:
      - '**'

# Prevent simultaneous snapshot update runs on the same branch
# Queue new runs to ensure all updates complete without conflicts
concurrency:
  group: update-snapshots-${{ github.ref }}
  cancel-in-progress: false

# Sets permissions of the GITHUB_TOKEN to allow pushing commits
permissions:
  contents: write

jobs:
  # Check if workflow should run
  check-trigger:
    name: Check Trigger Condition
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
      branch: ${{ steps.check.outputs.branch }}
    steps:
      - name: Checkout code (for scripts)
        uses: actions/checkout@v4

      - name: Check trigger condition
        id: check
        run: ./.github/scripts/snapshots/check-trigger.sh

  # Update snapshots
  update-snapshots:
    name: Update Snapshots in CI
    runs-on: ubuntu-latest
    needs: check-trigger
    if: needs.check-trigger.outputs.should_run == 'true'
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.check-trigger.outputs.branch }}
          # Need write access to push changes
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cleanup existing Docker resources
        run: ./.github/scripts/docker/cleanup-resources.sh docker-compose.e2e.yml

      - name: Run visual tests with snapshot update
        run: |
          echo "📸 Updating visual snapshots in remote CI environment..."
          echo "ℹ️  Updating all visual snapshots (tests/visual/ and tests/e2e/)"
          PLAYWRIGHT_ARGS="--update-snapshots" docker compose -f docker-compose.e2e.yml up --build --abort-on-container-exit
        env:
          DOCKER_USER: root
          TEST_ENV: ci-docker
          UPDATING_SNAPSHOTS: true

      - name: Check for snapshot changes
        id: check_changes
        run: |
          if git diff --quiet packages/frontend/tests; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No snapshot changes detected"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "✅ Snapshot changes detected"
          fi

      - name: Configure git for bot
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: ./.github/actions/configure-git-bot

      - name: Commit and push snapshot updates
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git add packages/frontend/tests

          # Create descriptive commit message
          CHANGED_FILES=$(git diff --cached --name-only | wc -l)
          git commit -m "test(frontend): Update visual snapshots in CI [skip ci]

          Updated $CHANGED_FILES snapshot file(s) in remote CI environment.

          This ensures pixel-perfect consistency with the CI/CD pipeline.
          Visual snapshots should only be generated in the remote environment
          to avoid platform-specific rendering differences.

          🤖 Generated by GitHub Actions
          Workflow: ${{ github.workflow }}
          Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          git push

      - name: Comment on PR (if triggered by PR comment)
        if: github.event_name == 'issue_comment' && steps.check_changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Visual snapshots have been updated in the remote CI environment and committed to this branch.\n\nPlease review the changes before merging.'
            })

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-snapshots
          path: packages/frontend/playwright-report/
          retention-days: 7

      - name: Upload visual test artifacts (failed + passed)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-artifacts
          path: |
            packages/frontend/test-results/**/test-failed-*.png
            packages/frontend/test-results/**/diff-*.png
            packages/frontend/test-results/**/*-actual.png
            packages/frontend/test-results/**/*-expected.png
            packages/frontend/test-results/**/error-context.md
            packages/frontend/tests/**/ui-snapshots.spec.ts-snapshots/*.png
          retention-days: 7

      - name: Summary
        run: |
          if [ "${{ steps.check_changes.outputs.has_changes }}" = "true" ]; then
            echo "### ✅ Snapshots Updated" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Visual regression snapshots have been updated in the remote CI environment." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Changed files:** $(git diff HEAD~1 --name-only packages/frontend/tests | wc -l)" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ℹ️ No Changes" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "No visual snapshot updates were needed." >> $GITHUB_STEP_SUMMARY
          fi